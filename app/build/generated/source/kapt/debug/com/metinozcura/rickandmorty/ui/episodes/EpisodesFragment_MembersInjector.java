// Generated by Dagger (https://dagger.dev).
package com.metinozcura.rickandmorty.ui.episodes;

import com.metinozcura.rickandmorty.ui.adapter.EpisodeAdapter;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EpisodesFragment_MembersInjector implements MembersInjector<EpisodesFragment> {
  private final Provider<EpisodeAdapter> episodeAdapterProvider;

  public EpisodesFragment_MembersInjector(Provider<EpisodeAdapter> episodeAdapterProvider) {
    this.episodeAdapterProvider = episodeAdapterProvider;
  }

  public static MembersInjector<EpisodesFragment> create(
      Provider<EpisodeAdapter> episodeAdapterProvider) {
    return new EpisodesFragment_MembersInjector(episodeAdapterProvider);
  }

  @Override
  public void injectMembers(EpisodesFragment instance) {
    injectEpisodeAdapter(instance, episodeAdapterProvider.get());
  }

  @InjectedFieldSignature("com.metinozcura.rickandmorty.ui.episodes.EpisodesFragment.episodeAdapter")
  public static void injectEpisodeAdapter(EpisodesFragment instance,
      EpisodeAdapter episodeAdapter) {
    instance.episodeAdapter = episodeAdapter;
  }
}
