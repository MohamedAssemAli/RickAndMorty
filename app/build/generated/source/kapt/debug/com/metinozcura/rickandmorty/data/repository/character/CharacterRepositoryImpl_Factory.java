// Generated by Dagger (https://dagger.dev).
package com.metinozcura.rickandmorty.data.repository.character;

import com.metinozcura.rickandmorty.data.service.CharacterApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CharacterRepositoryImpl_Factory implements Factory<CharacterRepositoryImpl> {
  private final Provider<CharacterApi> serviceProvider;

  public CharacterRepositoryImpl_Factory(Provider<CharacterApi> serviceProvider) {
    this.serviceProvider = serviceProvider;
  }

  @Override
  public CharacterRepositoryImpl get() {
    return newInstance(serviceProvider.get());
  }

  public static CharacterRepositoryImpl_Factory create(Provider<CharacterApi> serviceProvider) {
    return new CharacterRepositoryImpl_Factory(serviceProvider);
  }

  public static CharacterRepositoryImpl newInstance(CharacterApi service) {
    return new CharacterRepositoryImpl(service);
  }
}
