// Generated by Dagger (https://dagger.dev).
package com.metinozcura.rickandmorty.ui.locations;

import com.metinozcura.rickandmorty.ui.adapter.LocationAdapter;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationsFragment_MembersInjector implements MembersInjector<LocationsFragment> {
  private final Provider<LocationAdapter> locationAdapterProvider;

  public LocationsFragment_MembersInjector(Provider<LocationAdapter> locationAdapterProvider) {
    this.locationAdapterProvider = locationAdapterProvider;
  }

  public static MembersInjector<LocationsFragment> create(
      Provider<LocationAdapter> locationAdapterProvider) {
    return new LocationsFragment_MembersInjector(locationAdapterProvider);
  }

  @Override
  public void injectMembers(LocationsFragment instance) {
    injectLocationAdapter(instance, locationAdapterProvider.get());
  }

  @InjectedFieldSignature("com.metinozcura.rickandmorty.ui.locations.LocationsFragment.locationAdapter")
  public static void injectLocationAdapter(LocationsFragment instance,
      LocationAdapter locationAdapter) {
    instance.locationAdapter = locationAdapter;
  }
}
