// Generated by Dagger (https://dagger.dev).
package com.metinozcura.rickandmorty.data.repository.location;

import com.metinozcura.rickandmorty.data.service.LocationApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationRepositoryImpl_Factory implements Factory<LocationRepositoryImpl> {
  private final Provider<LocationApi> serviceProvider;

  public LocationRepositoryImpl_Factory(Provider<LocationApi> serviceProvider) {
    this.serviceProvider = serviceProvider;
  }

  @Override
  public LocationRepositoryImpl get() {
    return newInstance(serviceProvider.get());
  }

  public static LocationRepositoryImpl_Factory create(Provider<LocationApi> serviceProvider) {
    return new LocationRepositoryImpl_Factory(serviceProvider);
  }

  public static LocationRepositoryImpl newInstance(LocationApi service) {
    return new LocationRepositoryImpl(service);
  }
}
