// Generated by Dagger (https://dagger.dev).
package com.metinozcura.rickandmorty.di;

import android.content.Context;
import com.metinozcura.rickandmorty.data.db.AppDB;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DBModule_ProvideDatabaseFactory implements Factory<AppDB> {
  private final DBModule module;

  private final Provider<Context> appContextProvider;

  public DBModule_ProvideDatabaseFactory(DBModule module, Provider<Context> appContextProvider) {
    this.module = module;
    this.appContextProvider = appContextProvider;
  }

  @Override
  public AppDB get() {
    return provideDatabase(module, appContextProvider.get());
  }

  public static DBModule_ProvideDatabaseFactory create(DBModule module,
      Provider<Context> appContextProvider) {
    return new DBModule_ProvideDatabaseFactory(module, appContextProvider);
  }

  public static AppDB provideDatabase(DBModule instance, Context appContext) {
    return Preconditions.checkNotNullFromProvides(instance.provideDatabase(appContext));
  }
}
