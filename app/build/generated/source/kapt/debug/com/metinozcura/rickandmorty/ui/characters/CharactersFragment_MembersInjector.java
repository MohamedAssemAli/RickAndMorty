// Generated by Dagger (https://dagger.dev).
package com.metinozcura.rickandmorty.ui.characters;

import com.metinozcura.rickandmorty.ui.adapter.CharacterAdapter;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CharactersFragment_MembersInjector implements MembersInjector<CharactersFragment> {
  private final Provider<CharacterAdapter> characterAdapterProvider;

  public CharactersFragment_MembersInjector(Provider<CharacterAdapter> characterAdapterProvider) {
    this.characterAdapterProvider = characterAdapterProvider;
  }

  public static MembersInjector<CharactersFragment> create(
      Provider<CharacterAdapter> characterAdapterProvider) {
    return new CharactersFragment_MembersInjector(characterAdapterProvider);
  }

  @Override
  public void injectMembers(CharactersFragment instance) {
    injectCharacterAdapter(instance, characterAdapterProvider.get());
  }

  @InjectedFieldSignature("com.metinozcura.rickandmorty.ui.characters.CharactersFragment.characterAdapter")
  public static void injectCharacterAdapter(CharactersFragment instance,
      CharacterAdapter characterAdapter) {
    instance.characterAdapter = characterAdapter;
  }
}
