// Generated by Dagger (https://dagger.dev).
package com.metinozcura.rickandmorty.ui.locations;

import com.metinozcura.rickandmorty.data.repository.location.LocationRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationsViewModel_Factory implements Factory<LocationsViewModel> {
  private final Provider<LocationRepository> locationRepositoryProvider;

  public LocationsViewModel_Factory(Provider<LocationRepository> locationRepositoryProvider) {
    this.locationRepositoryProvider = locationRepositoryProvider;
  }

  @Override
  public LocationsViewModel get() {
    return newInstance(locationRepositoryProvider.get());
  }

  public static LocationsViewModel_Factory create(
      Provider<LocationRepository> locationRepositoryProvider) {
    return new LocationsViewModel_Factory(locationRepositoryProvider);
  }

  public static LocationsViewModel newInstance(LocationRepository locationRepository) {
    return new LocationsViewModel(locationRepository);
  }
}
