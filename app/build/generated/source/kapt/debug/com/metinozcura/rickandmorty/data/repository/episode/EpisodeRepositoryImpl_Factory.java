// Generated by Dagger (https://dagger.dev).
package com.metinozcura.rickandmorty.data.repository.episode;

import com.metinozcura.rickandmorty.data.db.AppDB;
import com.metinozcura.rickandmorty.data.service.EpisodeApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EpisodeRepositoryImpl_Factory implements Factory<EpisodeRepositoryImpl> {
  private final Provider<EpisodeApi> serviceProvider;

  private final Provider<AppDB> dbProvider;

  public EpisodeRepositoryImpl_Factory(Provider<EpisodeApi> serviceProvider,
      Provider<AppDB> dbProvider) {
    this.serviceProvider = serviceProvider;
    this.dbProvider = dbProvider;
  }

  @Override
  public EpisodeRepositoryImpl get() {
    return newInstance(serviceProvider.get(), dbProvider.get());
  }

  public static EpisodeRepositoryImpl_Factory create(Provider<EpisodeApi> serviceProvider,
      Provider<AppDB> dbProvider) {
    return new EpisodeRepositoryImpl_Factory(serviceProvider, dbProvider);
  }

  public static EpisodeRepositoryImpl newInstance(EpisodeApi service, AppDB db) {
    return new EpisodeRepositoryImpl(service, db);
  }
}
